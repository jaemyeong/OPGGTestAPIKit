{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"forever"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Configures the underlying implementation behave equivalent to."}]},{"type":"codeListing","syntax":null,"code":["source.multicast(MySubject()).refCount()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This has the following consequences:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using "},{"type":"codeVoice","code":"retry"},{"type":"text","text":" or "},{"type":"codeVoice","code":"concat"},{"type":"text","text":" operators after this operator usually isn’t advised."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Each connection to source observable sequence will share the same subject."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"After number of subscribers drops from 1 to 0 and connection to source observable sequence is dispose, this operator will"},{"type":"text","text":" "},{"type":"text","text":"continue holding a reference to the same subject."},{"type":"text","text":" "},{"type":"text","text":"If at some later moment a new observer initiates a new connection to source it can potentially receive"},{"type":"text","text":" "},{"type":"text","text":"some of the stale events received during previous connection."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"After source sequence terminates any new observer will always immediately receive replayed elements and terminal event."},{"type":"text","text":" "},{"type":"text","text":"No new subscriptions to source observable sequence will be attempted."}]}]}]},{"type":"codeListing","syntax":null,"code":["let xs = Observable.deferred { () -> Observable<TimeInterval> in","        print(\"Performing work ...\")","        return Observable.just(Date().timeIntervalSince1970)","    }","    .share(replay: 1, scope: .forever)","","_ = xs.subscribe(onNext: { print(\"next \\($0)\") }, onCompleted: { print(\"completed\\n\") })","_ = xs.subscribe(onNext: { print(\"next \\($0)\") }, onCompleted: { print(\"completed\\n\") })","_ = xs.subscribe(onNext: { print(\"next \\($0)\") }, onCompleted: { print(\"completed\\n\") })"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Notice how time interval is the same, replayed, and "},{"type":"codeVoice","code":"Performing work ..."},{"type":"text","text":" is printed only once"}]},{"type":"codeListing","syntax":null,"code":["Performing work ...","next 1495999013.76356","completed","","next 1495999013.76356","completed","","next 1495999013.76356","completed"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/rxswift\/subjectlifetimescope\/forever"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.apple.OPGGTestAPIKit\/documentation\/RxSwift\/SubjectLifetimeScope\/forever","interfaceLanguage":"swift"},"abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"One subject will store replay events for all connections to source."}]},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Connections won’t be isolated from each another."}]}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"forever"}],"title":"SubjectLifetimeScope.forever","roleHeading":"Case","role":"symbol","symbolKind":"case","externalID":"s:7RxSwift20SubjectLifetimeScopeO7foreveryA2CmF","modules":[{"name":"RxSwift"}]},"hierarchy":{"paths":[["doc:\/\/com.apple.OPGGTestAPIKit\/documentation\/RxSwift","doc:\/\/com.apple.OPGGTestAPIKit\/documentation\/RxSwift\/SubjectLifetimeScope"]]},"references":{"doc://com.apple.OPGGTestAPIKit/documentation/RxSwift/SubjectLifetimeScope/forever":{"role":"symbol","title":"SubjectLifetimeScope.forever","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"forever"}],"abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"One subject will store replay events for all connections to source."}]},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Connections won’t be isolated from each another."}]}],"identifier":"doc:\/\/com.apple.OPGGTestAPIKit\/documentation\/RxSwift\/SubjectLifetimeScope\/forever","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/subjectlifetimescope\/forever"},"doc://com.apple.OPGGTestAPIKit/documentation/RxSwift/SubjectLifetimeScope":{"role":"symbol","title":"SubjectLifetimeScope","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubjectLifetimeScope"}],"abstract":[{"type":"text","text":"Subject lifetime scope"}],"identifier":"doc:\/\/com.apple.OPGGTestAPIKit\/documentation\/RxSwift\/SubjectLifetimeScope","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SubjectLifetimeScope"}],"url":"\/documentation\/rxswift\/subjectlifetimescope"},"doc://com.apple.OPGGTestAPIKit/documentation/RxSwift":{"role":"collection","title":"RxSwift","abstract":[],"identifier":"doc:\/\/com.apple.OPGGTestAPIKit\/documentation\/RxSwift","kind":"symbol","type":"topic","url":"\/documentation\/rxswift"}}}